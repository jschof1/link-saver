import React, { useState, useEffect } from "react";
import styled from "styled-components";

const StyledContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 50px;
`;

const StyledNote = styled.div`
  position: relative;
  width: 250px;
  height: 250px;
  margin: 20px;
  padding: 10px;
  background-color: #fff;
  box-shadow: 1px 1px 5px #ddd;
  border-radius: 5px;
  overflow: hidden;

  &:after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 25px;
    height: 25px;
    background-color: #333;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
    font-size: 18px;
    font-weight: bold;
    transition: all 0.3s;
    z-index: 1;
  }

  &:hover:after {
    transform: scale(1.2);
  }

  &:before {
    content: "";
    position: absolute;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 60px;
    background-color: #fff;
    z-index: 1;
  }
`;

const StyledInput = styled.textarea`
  width: 100%;
  height: calc(100% - 80px);
  border: none;
  resize: none;
  font-size: 16px;
  line-height: 1.5;
`;

const StyledButton = styled.button`
  position: fixed;
  bottom: 50px;
  right: 50px;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #333;
  color: #fff;
  font-size: 24px;
  font-weight: bold;
  border: none;
  cursor: pointer;
  transition: all 0.3s;

  &:hover {
    transform: scale(1.2);
  }
`;

const App = () => {
  const [notes, setNotes] = useState([]);

  useEffect(() => {
    const savedNotes = JSON.parse(localStorage.getItem("notes"));
    if (savedNotes) {
      setNotes(savedNotes);
    }
  }, []);

  useEffect(() => {
    localStorage.setItem("notes", JSON.stringify(notes));
  }, [notes]);

  const addNote = () => {
    setNotes([...notes, ""]);
  };

  const updateNote = (index, text) => {
    const updatedNotes = [...notes];
    updatedNotes[index] = text;
    setNotes(updatedNotes);
  };

  const deleteNote = (index) => {
    const updatedNotes = [...notes];
    updatedNotes.splice(index, 1);
    setNotes(updatedNotes);
  };

  return (
    <>
      <StyledContainer>
        {notes.map((note, index) => (
          <StyledNote key={index}>
            <StyledInput
              value={note}
              onChange={(e) => updateNote(index, e.target.value)}
              placeholder="Enter a link here..."
            />
            <div onClick={() => deleteNote(index)}>x</div>
          </StyledNote>
        ))}
      </Styled